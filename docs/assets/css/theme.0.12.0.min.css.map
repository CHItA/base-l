{"version":3,"sources":["components/_type.scss","../../../src/scss/tools/mixin/_type.scss","../../../src/scss/tools/function/_unitless.scss"],"names":[],"mappings":"AAqBA,UCsHC,eAtHiB,AAuHjB,gBAAa,AACb,cCjIoB,ADkIpB,qBAxHwB,CDCxB,AAED,UCkHC,iBA/GgB,AAgHhB,gBAAa,AACb,cCjIoB,ADkIpB,qBAjHwB,CDFxB,AAED,UC8GC,oBAxGgB,AA0GhB,wBCjIoB,CFmBpB,AAED,oBC2GC,gBAAa,AAEb,qBA1GuB,CDHxB,AAEC,UCwGA,mBAjGgB,AAmGhB,wBCjIoB,CFuBpB,AAED,UCsGC,iBA1FgB,AA2FhB,gBAAa,AACb,yBCjIoB,ADkIpB,qBA5FuB,CDXvB,AAED,YCkGC,iBAnFgB,AAoFhB,gBAAa,AAZZ,kBAAmB,AAapB,mBAlFoB,AA2EnB,iBAAmB,CD3FpB,AAED,mBCiGC,oBArFuB,CDZxB,AAEC,OC4FA,kBA5EgB,AA6EhB,gBAAa,AACb,eCjIoB,CFmCpB,AAED,UC0FC,eArEgB,AAuEhB,gBCjIoB,CFuCpB,AAED,oBCuFC,gBAAa,AAEb,oBAvEuB,CDlBxB,AAEC,UCoFA,mBA9DgB,AAgEhB,eCjIoB,CF2CpB,AAED,OCmFC,gBAAa,AACb,wBCjIoB,CF+CpB,AAED,cC8EC,kBAvDgB,AA0DhB,oBAzDuB,CDxBxB,AAEC,OC6EA,gBAAa,AACb,wBCjIoB,CFmDpB,AAED,QC4EC,cAxCe,AA8Bd,wBAA0B,CDhE3B,AAED,cCsEC,kBAzCgB,AA0ChB,gBAAa,AAEb,qBA3CuB,CD9BxB,AAEC,MCsEA,kBAjCoB,CDrCpB,AAED,SCkEC,iBA3BgB,AA4BhB,gBAAa,AACb,yBCjIoB,ADkIpB,oBA7BuB,CDtCvB","file":"theme.0.12.0.min.css","sourcesContent":["//------------------------------------------------------------------------------\n// @object: Type\n//------------------------------------------------------------------------------\n// @description\n//\n//------------------------------------------------------------------------------\n\n//\n// @settings\n\n// Layout Variables\n$btn-spacing: 16px !default;\n\n\n// Theme Variables\n$btn-background-color: $gray-100 !default;\n\n\n//\n// @scss\n\n.display4 {\n\t@include type(display4);\n}\n\n.display3 {\n\t@include type(display3);\n}\n\n.display2 {\n\t@include type(display2);\n}\n\n.display1 {\n\t@include type(display1);\n}\n\n.headline {\n\t@include type(headline);\n}\n\n.blockquote {\n\t@include type(blockquote);\n}\n\n.title {\n\t@include type(title);\n}\n\n.subhead2 {\n\t@include type(subhead2);\n}\n\n.subhead1 {\n\t@include type(subhead1);\n}\n\n.body2 {\n\t@include type(body2);\n}\n\n.body1 {\n\t@include type(body1);\n}\n\n.button {\n\t@include type(button);\n}\n\n.menu {\n\t@include type(menu);\n}\n\n.caption {\n\t@include type(caption);\n}\n","//------------------------------------------------------------------------------\n// @tool: Type\n//------------------------------------------------------------------------------\n// @description\n//\n// A mixin for generating type settings based on Google Material Design types\n//\n//------------------------------------------------------------------------------\n\n//@settings\n$type-font-weight: (\n\tthin: 100,\n\tlight: 300,\n\tregular: 400,\n\tmedium: 500,\n\tbold: 700,\n\tblack: 900\n);\n\n$type-styles: (\n\tdisplay4: (\n\t\tfont-size: 112px,\n\t\tletter-spacing: -0.04em,\n\t\tfont-weight: map-get($type-font-weight, light),\n\t\tline-height: unitless(112px, 112px),\n\t\topacity: 0.54\n\t),\n\tdisplay3: (\n\t\tfont-size: 56px,\n\t\tletter-spacing: -0.02em,\n\t\tfont-weight: map-get($type-font-weight, regular),\n\t\tline-height: unitless(56px, 56px),\n\t\topacity: 0.54\n\t),\n\tdisplay2: (\n\t\tfont-size: 45px,\n\t\tletter-spacing: normal,\n\t\tfont-weight: map-get($type-font-weight, regular),\n\t\tline-height: unitless(48px, 45px),\n\t\topacity: 0.54\n\t),\n\tdisplay1: (\n\t\tfont-size: 34px,\n\t\tletter-spacing: normal,\n\t\tfont-weight: map-get($type-font-weight, regular),\n\t\tline-height: unitless(40px, 34px),\n\t\topacity: 0.87\n\t),\n\theadline: (\n\t\tfont-size: 24px,\n\t\tletter-spacing: normal,\n\t\tfont-weight: map-get($type-font-weight, regular),\n\t\tline-height: unitless(32px, 24px),\n\t\topacity: 0.87\n\t),\n\tblockquote: (\n\t\tfont-size: 24px,\n\t\tletter-spacing: 0.02em,\n\t\tfont-weight: map-get($type-font-weight, thin),\n\t\tline-height: normal,\n\t\topacity: 0.54\n\t),\n\ttitle: (\n\t\tfont-size: 20px,\n\t\tletter-spacing: 0.02em,\n\t\tfont-weight: map-get($type-font-weight, medium),\n\t\tline-height: unitless(32px, 20px),\n\t\topacity: 0.87\n\t),\n\tsubhead2: (\n\t\tfont-size: 16px,\n\t\tletter-spacing: 0.04em,\n\t\tfont-weight: map-get($type-font-weight, regular),\n\t\tline-height: unitless(28px),\n\t\topacity: 0.87\n\t),\n\tsubhead1: (\n\t\tfont-size: 15px,\n\t\tletter-spacing: 0.04em,\n\t\tfont-weight: map-get($type-font-weight, regular),\n\t\tline-height: unitless(24px, 15px),\n\t\topacity: 0.87\n\t),\n\tbody2: (\n\t\tfont-size: 14px,\n\t\tletter-spacing: 0.04em,\n\t\tfont-weight: map-get($type-font-weight, medium),\n\t\tline-height: unitless(24px, 14px),\n\t\topacity: 0.87\n\t),\n\tbody1: (\n\t\tfont-size: 14px,\n\t\tletter-spacing: 0.04em,\n\t\tfont-weight: map-get($type-font-weight, regular),\n\t\tline-height: unitless(20px, 14px),\n\t\topacity: 0.87\n\t),\n\tbutton: (\n\t\tfont-size: 14px,\n\t\tletter-spacing: normal,\n\t\tfont-weight: map-get($type-font-weight, medium),\n\t\tline-height: 1,\n\t\topacity: 0.54\n\t),\n\tmenu: (\n\t\tfont-size: 14px,\n\t\tletter-spacing: normal,\n\t\tfont-weight: map-get($type-font-weight, medium),\n\t\tline-height: normal,\n\t\topacity: 0.54\n\t),\n\tcaption: (\n\t\tfont-size: 12px,\n\t\tletter-spacing: 0.08em,\n\t\tfont-weight: map-get($type-font-weight, regular),\n\t\tline-height: unitless(20px, 12px),\n\t\topacity: 0.87\n\t)\n);\n\n//\n// @scss\n@mixin type($type, $color-contrast: false) {\n\t$type-props: map-get($type-styles, $type);\n\t@if not map-has-key($type-styles, $type) {\n\t\t@error \"Invalid style specified! Choose one of #{map-keys($type-styles)}\";\n\t}\n\t@if $type == blockquote {\n\t\tfont-style: italic;\n\t}\n\t@if $type == button {\n\t\ttext-transform: uppercase;\n\t}\n\t@if $type == blockquote {\n\t\tposition: relative;\n\t}\n\t@if $color-contrast {\n\t\topacity: map-get($type-props, opacity);\n\t}\n\tfont-size: map-get($type-props, font-size);\n\tfont-weight: #{map-get($type-props, font-weight)};\n\tline-height: map-get($type-props, line-height);\n\tletter-spacing: map-get($type-props, letter-spacing);\n}\n","//------------------------------------------------------------------------------\n// @tool: Unitless\n//------------------------------------------------------------------------------\n// @description\n//\n// A function for returning unitless numer based on root font-size\n//\n//------------------------------------------------------------------------------\n\n//\n// @scss\n@function unitless($line-height, $font-size: $default-font-size) {\n\t@return $line-height / $font-size;\n}\n"],"sourceRoot":"/source/"}