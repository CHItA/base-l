//------------------------------------------------------------------------------
// @object: Col
//------------------------------------------------------------------------------
// @description:
//
// This grid system uses table layout to simplify the use of a grid. Define the
// wrapper with o-grid class and all wrappers within in it use o-col object
// combined with o-col-x-x modifier to set the width which enables
// table-layout: fixed on all layouts large enough to not be fluid. The system
// disables this once you reach small devices where fluid layouts are better.
// The grid col & sizes can both be applied either in your html (recomended) or
// as a mixin.
//
//------------------------------------------------------------------------------

//
// @scss
@if $use-html-layout {
	//
	// Setup all grid columns to use table cell layout and use the default gutter
	@for $i from 1 through 12 {
		.o-col-#{$i} {
			@include col-width($i);
		}
	}

	.o-pull-0 {
		right: auto;
	}

	@for $i from 1 through 12 {
		.o-pull-#{$i} {
			@include pull($i);
		}
	}

	.o-push-0 {
		left: auto;
	}
	@for $i from 1 through 12 {
		.o-push-#{$i} {
			@include push($i);
		}
	}

	@for $i from 1 through 12 {
		.o-offset-#{$i} {
			@include offset($i);
		}
	}

	//
	// small widths
	@media (min-width: $bp-sm) {
		@for $i from 1 through 12 {
			.o-col-sm-#{$i} {
				@include col-width($i);
			}
		}

		.o-pull-sm-0 {
			right: auto;
		}
		@for $i from 1 through 12 {
			.o-pull-sm-#{$i} {
				@include pull($i);
			}
		}

		.o-push-sm-0 {
			left: auto;
		}
		@for $i from 1 through 12 {
			.o-push-sm-#{$i} {
				@include push($i);
			}
		}

		@for $i from 1 through 12 {
			.o-offset-sm-#{$i} {
				@include offset($i);
			}
		}
	}

	//
	// medium widths
	@media (min-width: $bp-md) {
		@for $i from 1 through 12 {
			.o-col-md-#{$i} {
				@include col-width($i);
			}
		}

		.o-pull-md-0 {
			right: auto;
		}
		@for $i from 1 through 12 {
			.o-pull-md-#{$i} {
				@include pull($i);
			}
		}

		.o-push-md-0 {
			left: auto;
		}
		@for $i from 1 through 12 {
			.o-push-md-#{$i} {
				@include push($i);
			}
		}

		@for $i from 1 through 12 {
			.o-offset-md-#{$i} {
				@include offset($i);
			}
		}
	}

	//
	// large widths
	@media (min-width: $bp-lg) {
		@for $i from 1 through 12 {
			.o-col-lg-#{$i} {
				@include col-width($i);
			}
		}

		.o-pull-lg-0 {
			right: auto;
		}
		@for $i from 1 through 12 {
			.o-pull-lg-#{$i} {
				@include pull($i);
			}
		}

		.o-push-lg-0 {
			left: auto;
		}
		@for $i from 1 through 12 {
			.o-push-lg-#{$i} {
				@include push($i);
			}
		}

		@for $i from 1 through 12 {
			.o-offset-lg-#{$i} {
				@include offset($i);
			}
		}
	}

	//
	// extra-large widths
	@media (min-width: $bp-xl) {
		@for $i from 1 through 12 {
			.o-col-xl-#{$i} {
				@include col-width($i);
			}
		}

		.o-pull-xl-0 {
			right: auto;
		}
		@for $i from 1 through 12 {
			.o-pull-xl-#{$i} {
				@include pull($i);
			}
		}

		.o-push-xl-0 {
			left: auto;
		}
		@for $i from 1 through 12 {
			.o-push-xl-#{$i} {
				@include push($i);
			}
		}

		@for $i from 1 through 12 {
			.o-offset-xl-#{$i} {
				@include offset($i);
			}
		}
	}
}
/* stylelint-enable at-rule-empty-line-before */
