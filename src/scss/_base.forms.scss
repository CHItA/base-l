//------------------------------------------------------------------------------
// BASE: Forms
//------------------------------------------------------------------------------

//
// Settings
$base-input-height: 2.5rem;
$base-input-border-width: $default-border-size;
$base-input-border-radius: $default-border-radius;
$base-input-padding-y: 0.5rem;
$base-input-padding-x: 0.5rem;

$base-input-color: $default-body-color;
$base-input-background-color: $white;
$base-input-border-color: $default-gray;

$base-input-border-hover-color: $default-link-hover-color;

$base-input-background-focus-color: $base-input-background-color;
$base-input-border-focus-color: $default-accent;

$base-input-placeholder-color: $default-gray;

$base-input-disabled-color: $gray-300;

$base-input-invalid-border-color: $pink-500;
$base-input-invalid-color: $pink-300;

$base-form-info-color: $warning-100;
$base-form-warning-color: $important-100;



// 1. Make inputs at least the height of their button counterpart
//    (base line-height + padding + border)
// 3. This has no effect on <select>s in some browsers, due to the limited
//    stylability of `<select>`s in CSS.
// 4. Override Firefox's unusual default opacity; see
//    https://github.com/twbs/bootstrap/pull/11526.
// 5. iOS fix for unreadable disabled content;
//    see https://github.com/twbs/bootstrap/issues/11655.
//
[type='date'],
[type='datetime'],
[type='datetime-local'],
[type='email'],
[type='month'],
[type='number'],
[type='password'],
[type='search'],
[type='tel'],
[type='text'],
[type='time'],
[type='url'],
[type='week'],
[type='color'],
select,
textarea {
    background-color: $base-input-background-color;
    border: $base-input-border-width solid $base-input-border-color;
    border-radius: $base-input-border-radius;
    color: $base-input-color;
    display: block;
    @media (min-width: $bp-medium) {
        display: inline-block;
    }
    height: $base-input-height; // [1]
    padding: $base-input-padding-y $base-input-padding-x;
    width: 100%;
    // @include box-shadow($input-box-shadow);
    transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;

    &:hover {
        border-color: $base-input-border-hover-color;
    }

    &:focus {
        background-color: $base-input-background-focus-color;
        border-color: $base-input-border-focus-color;
        color: $base-input-border-focus-color;
        outline: none;
        // @include box-shadow($shadow);
    }

    &::placeholder {
        color: $base-input-placeholder-color;
        opacity: 1; // [4]
    }

    // Disabled and read-only inputs
    //
    // HTML5 says that controls under a fieldset > legend:first-child won't be
    // disabled if the fieldset is disabled. Due to implementation difficulty, we
    // don't honor that edge case; we style them as disabled anyway.
    &:disabled,
    &[readonly] {
        background-color: $base-input-disabled-color;
        opacity: 1; // [5]
    }

    &:disabled {
        cursor: not-allowed;;
    }

    &:focus:invalid,
    &:focus:invalid,
    &:focus:invalid {
        border-color: $base-input-invalid-border-color;
        color: $base-input-invalid-color;
    }
}

fieldset {
    display: block;

    label {
        display: block;
    }

}

textarea {
    height: auto;
}

//
// 1. Suppress the nested default white text on blue background highlight given to
//    the selected option text when the (still closed) <select> receives focus
//    in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
//    match the appearance of the native widget.
//    See https://github.com/twbs/bootstrap/issues/19398.
select {
    padding: .5rem 2.25rem .5rem 1rem;
    min-width: 5rem;

    &:focus::-ms-value {
        background-color: $base-input-background-color; // [1]
        color: $base-input-color; // [1]
    }

    &:focus:-moz-focusring {
        text-shadow: 0 0 0 #000000;
        color: transparent;
    }
}

input[type='color'] {
    height: $base-input-height;
    width: 2.5rem;
}

//
// Make file inputs better match text inputs by forcing them to new lines.
input[type='file'],
input[type='range'] {
    display: block;
}

input[type='file'],
input[type='radio'],
input[type='checkbox'] {
    &:focus:invalid:focus {
        outline-color: $base-input-invalid-border-color;
    }
}

// Remove default checkbox
[type='checkbox']:not(:checked),
[type='checkbox']:checked,
[type='radio']:not(:checked),
[type='radio']:checked {
    opacity: 0;
    position: absolute;
    left: -9999px;
}

// Default Styles
[type='checkbox'],
[type='radio'] {
    & + label {
        cursor: pointer;
        user-select: none;
        display: inline-block;
        margin: 0 0.5rem;
        padding-left: 1.75rem;
        position: relative;
        transition: .28s ease;
    }
}

[type='checkbox'] {
    + label:before {
        border: 2px solid $base-input-border-color;
        border-radius: 1px;
        content: '';
        height: 1rem;
        margin-top: 2px;
        position: absolute;
        top: 0;
        left: 0;
        width: 1rem;
        z-index: 0;
        transition: .2s;
    }

    &:hover + label:before {
        border-color: $base-input-border-hover-color;
    }

    &:not(:checked):disabled + label:before {
        background-color: $base-input-disabled-color;
        border: none;
    }
}

[type='checkbox']:checked {
    + label:before {
        border-top: 2px solid transparent;
        border-right: 2px solid $base-input-border-hover-color;
        border-bottom: 2px solid $base-input-border-hover-color;
        border-left: 2px solid transparent;
        height: 1.125rem;
        top: -4px;
        left: -5px;
        width: 0.75rem;
        transform: rotate(40deg);
        transform-origin: 100% 100%;
        backface-visibility: hidden;
    }

    &:disabled + label:before {
        border-right: 2px solid $base-input-disabled-color;
        border-bottom: 2px solid $base-input-disabled-color;
    }
}

// Indeterminate checkbox
[type='checkbox']:indeterminate {
    + label:before {
        border-top: none;
        border-right: 2px solid $base-input-invalid-border-color;
        border-bottom: none;
        border-left: none;
        height: 1.125rem;
        top: -11px;
        left: -12px;
        width: 0.75rem;
        transform: rotate(90deg);
        transform-origin: 100% 100%;
        backface-visibility: hidden;
    }

    // Disabled indeterminate
    &:disabled + label:before {
        background-color: transparent;
        border-right: 2px solid $base-input-disabled-color;
    }
}

[type='radio'] {
    & + label:before,
    & + label:after {
        border-radius: 50%;
        content: '';
        height: 1rem;
        margin: 0.25rem;
        position: absolute;
        top: 0;
        left: 0;
        width: 1rem;
        z-index: 0;
        transition: .28s ease;
    }

    &:not(:checked) + label {
        &:before,
        &:after {
            border: 2px solid $base-input-border-color;
        }

        &:after {
            z-index: -1;
            transform: scale(0);
        }
    }

    &:hover + label:before {
        border-color: $base-input-border-hover-color;
    }

    // Checked
    &:checked + label {
        &:before {
            border: 2px solid $base-input-border-hover-color;
        }

        &:after {
            background-color: $base-input-border-hover-color;
            z-index: 0;
            transform: scale(.5);
        }
    }

    // Disabled style
    &:disabled {

        + label {
            color: $base-input-disabled-color;
        }

        &:checked + label:before,
        &:not(:checked) + label:before {
            border: 2px solid $base-input-disabled-color;
        }

        :checked + label:after {
            background-color: $base-input-disabled-color;
            border: none;
        }
    }
}

//
// Placeholder Colour
::-webkit-input-placeholder { color: $base-input-placeholder-color; }
:-moz-placeholder { color: $base-input-placeholder-color; }
::-moz-placeholder { color: $base-input-placeholder-color; }
:-ms-input-placeholder { color: $base-input-placeholder-color; }
