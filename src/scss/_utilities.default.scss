//
// Suppress the focus outline on elements that cannot be accessed via keyboard.
// This prevents an unwanted focus outline from appearing around elements that
// might still respond to pointer events.
//
[tabindex='-1']:focus {
    outline: none !important;
}

.browserupgrade {
    background: $default-gray;
    color: $black;
    margin: 0.2em 0;
    padding: 0.2em 0;
}


















/* ==========================================================================
Helper classes
========================================================================== */

// Only display content to screen readers
//
// See: http://a11yproject.com/posts/how-to-hide-content/

.sr-only {
    border: 0;
    clip: rect(0,0,0,0);
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
    width: 1px;
}

/*
* Hide visually and from screen readers
*/

.hidden {
    display: none !important;
}

/*
* Hide only visually, but have it available for screen readers:
* http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
*/

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
    width: 1px;
}

/*
* Extends the .visuallyhidden class to allow the element
* to be focusable when navigated to via the keyboard:
* https://www.drupal.org/node/897638
*/

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    position: static;
    overflow: visible;
    width: auto;
}

/*
* Hide visually and from screen readers, but maintain layout
*/

.invisible {
    visibility: hidden;
}

/*
* Clearfix: contain floats
*
* For modern browsers
* 1. The space content is one way to avoid an Opera bug when the
*    `contenteditable` attribute is included anywhere else in the document.
*    Otherwise it causes space to appear at the top and bottom of elements
*    that receive the `clearfix` class.
* 2. The use of `table` rather than `block` is only necessary if using
*    `:before` to contain the top-margins of child elements.
*/

.clearfix:before,
.clearfix:after {
    content: ' '; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

//------------------------------------------------------------------------------
// Color Coding
//------------------------------------------------------------------------------
.code-color {
    // ALL
    .comment {
        color: $blue-gray-500;
    }

    // HTML
    .support {
        color: $red-400;
    }

    .attribute,
    .operator {
        color: $indigo-300;
    }

    .string {
        color: $light-blue-400;
    }

    // CSS
    .hex-color,
    .unit,
    .entity.name.tag,
    .direct-descendant {
        color: $red-400;
    }

    .css-property,
    .css-value,
    .entity.name.pseudo,
    .vendor-prefix {
        color: $indigo-300;
    }

    .entity.name.class,
    .constant.numeric {
        color: $light-blue-400;
    }
}

/* ==========================================================================
Print styles.
Inlined to avoid the additional HTTP request:
http://www.phpied.com/delay-loading-your-print-css/
========================================================================== */

@media print {
    *,
    *:before,
    *:after,
    *:first-letter,
    *:first-line {
        text-shadow: none !important;
        background: transparent !important;
        box-shadow: none !important;
        color: $black !important; /* Black prints faster: http://www.sanbeiji.com/archives/953 */
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    a[href]:after {
        content: ' (' attr(href) ')';
    }

    abbr[title]:after {
        content: ' (' attr(title) ')';
    }

    /*
    * Don't show links that are fragment identifiers,
    * or use the `javascript:` pseudo protocol
    */

    a[href^='#']:after,
    a[href^='javascript:']:after {
        content: '';
    }

    pre,
    blockquote {
        border: 1px solid $gray-500;
        page-break-inside: avoid;
    }

    /*
    * Printing Tables:
    * http://css-discuss.incutio.com/wiki/Printing_Tables
    */

    thead {
        display: table-header-group;
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    img {
        max-width: 100% !important;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3 {
        page-break-after: avoid;
    }
}
