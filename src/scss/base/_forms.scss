//------------------------------------------------------------------------------
// @base: Forms
//------------------------------------------------------------------------------
// @description:
//
//------------------------------------------------------------------------------

//
// @settings

// Layout Variables
$base-input-height: unit(5);
$base-input-border-width: $default-border-size;
$base-input-border-radius: $default-border-radius;

// Theme Variables
$base-input-color: $default-body-color;
$base-input-background-color: $white;
$base-input-border-color: $default-gray;

$base-input-border-hover-color: $default-primary-dark-color;

$base-input-background-focus-color: $base-input-background-color;
$base-input-border-focus-color: $base-input-border-hover-color;

$base-input-placeholder-color: $default-gray;

$base-input-disabled-color: $default-gray-light;

$base-input-invalid-border-color: $default-important-color;
$base-input-invalid-color: $default-important-light-color;


//
// @scss
form {
	span {
		display: block;
		@include vertical-rhythm();
	}
	@media (min-width: $bp-medium) {
		span {
			vertical-align: middle;
			display: inline-block;
			margin-bottom: 0;
		}
	}
}


// 1. Make inputs at least the height of their button counterpart
//    (base line-height + padding + border)
// 3. This has no effect on <select>s in some browsers, due to the limited
//    stylability of `<select>`s in CSS.
// 4. Override Firefox"s unusual default opacity; see
//    https://github.com/twbs/bootstrap/pull/11526.
// 5. iOS fix for unreadable disabled content;
//    see https://github.com/twbs/bootstrap/issues/11655.
//
[type="date"],
[type="datetime"],
[type="datetime-local"],
[type="email"],
[type="month"],
[type="number"],
[type="password"],
[type="search"],
[type="tel"],
[type="text"],
[type="time"],
[type="url"],
[type="week"],
[type="color"],
select,
textarea {
	background-color: $base-input-background-color;
	border: $base-input-border-width solid $base-input-border-color;
	border-radius: $base-input-border-radius;
	color: $base-input-color;
	display: block;
	@media (min-width: $bp-medium) {
		display: inline-block;
	}
	width: 100%;
	height: $base-input-height; // [1]
	padding: unit(1);
	transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;

	&:hover {
		border-color: $base-input-border-hover-color;
	}

	&:focus {
		background-color: $base-input-background-focus-color;
		border-color: $base-input-border-focus-color;
		color: $base-input-border-focus-color;
		outline: none;
	}

	&::placeholder {
		color: $base-input-placeholder-color;
		opacity: 1; // [4]
	}

	// Disabled and read-only inputs
	//
	// HTML5 says that controls under a fieldset > legend:first-child won"t be
	// disabled if the fieldset is disabled. Due to implementation difficulty, we
	// don"t honor that edge case; we style them as disabled anyway.
	&:disabled,
	&[readonly] {
		background-color: $base-input-disabled-color;
		opacity: 1; // [5]
	}

	&:disabled {
		cursor: not-allowed;
	}

	&:focus:invalid,
	&:focus:invalid,
	&:focus:invalid {
		border-color: $base-input-invalid-border-color;
		color: $base-input-invalid-color;
	}
}

textarea {
	height: auto;
}

//
// 1. Suppress the nested default white text on blue background highlight given
//    to the selected option text when the (still closed) <select> receives
//    focusin IE and (under certain conditions) Edge, as it looks bad and cannot
//    be made to match the appearance of the native widget.
//    See https://github.com/twbs/bootstrap/issues/19398.
/* stylelint-disable string-quotes */
select {
	background-color: $base-input-background-color;
	background-origin: content-box;
	@include background-triangle($base-input-border-color);
	background-position: right -unit(2) center;
	background-repeat: no-repeat;
	background-size: 9px 6px;
	display: inline-block;
	min-width: unit(10);
	max-width: 100%;
	padding: unit(1) unit(4.5) unit(1) unit(2);

	&:hover,
	&:focus {
		@include background-triangle($base-input-border-hover-color);
	}

	&:focus::-ms-value {
		background-color: $base-input-background-color; // [1]
		@include background-triangle($base-input-border-hover-color);
		color: $base-input-color; // [1]
	}

	&:focus:-moz-focusring {
		color: transparent;
		text-shadow: 0 0 0 $black;
	}

	&[multiple="multiple"] {
		background-image: none;
	}
}
/* stylelint-enable string-quotes */

input[type="color"] {
	width: $base-input-height;
	height: $base-input-height;
}

//
// Make file inputs better match text inputs by forcing them to new lines.
input[type="file"],
input[type="range"] {
	display: block;
}

input[type="file"],
input[type="radio"],
input[type="checkbox"] {
	&:focus:invalid:focus {
		outline-color: $base-input-invalid-border-color;
	}
}

// Remove default checkbox
[type="checkbox"]:not(:checked),
[type="checkbox"]:checked,
[type="radio"]:not(:checked),
[type="radio"]:checked {
	opacity: 0;
	position: absolute;
	left: -9999px;
}

// Default Styles
[type="checkbox"],
[type="radio"] {
	& + label {
		position: relative;
		display: inline-block;
		margin: 0 unit(1);
		padding-left: unit(4);
		cursor: pointer;
		user-select: none;
		transition: 0.28s ease;
	}
}

[type="checkbox"] {
	+ label:before {
		border: $base-input-border-width solid $base-input-border-color;
		border-radius: unit(0.125);
		position: absolute;
		top: 0;
		left: 0;
		z-index: 0;
		width: unit(2);
		height: unit(2);
		margin-top: unit(0.25);
		content: "";
		transition: 0.2s;
	}

	&:hover + label:before {
		border-color: $base-input-border-hover-color;
	}

	&:not(:checked):disabled + label:before {
		background-color: $base-input-disabled-color;
		border: none;
	}
}

[type="checkbox"]:checked {
	+ label:before {
		border-top: $base-input-border-width solid transparent;
		border-right: $base-input-border-width solid $base-input-border-hover-color;
		border-bottom: $base-input-border-width solid $base-input-border-hover-color;
		border-left: $base-input-border-width solid transparent;
		top: -unit(0.5);
		left: -5px;
		width: unit(1.5);
		height: unit(2.25);
		transform: rotate(40deg);
		transform-origin: 100% 100%;
		backface-visibility: hidden;
	}

	&:disabled + label:before {
		border-right: $base-input-border-width solid $base-input-disabled-color;
		border-bottom: $base-input-border-width solid $base-input-disabled-color;
	}
}

// Indeterminate checkbox
[type="checkbox"]:indeterminate {
	+ label:before {
		border-top: none;
		border-right: $base-input-border-width solid $base-input-invalid-border-color;
		border-bottom: none;
		border-left: none;
		top: -11px;
		left: -unit(1.5);
		height: unit(2.25);
		transform: rotate(90deg);
		transform-origin: 100% 100%;
		backface-visibility: hidden;
	}

	// Disabled indeterminate
	&:disabled + label:before {
		background-color: transparent;
		border-right: $base-input-border-width solid $base-input-disabled-color;
	}
}

[type="radio"] {
	& + label:before,
	& + label:after {
		border-radius: 50%;
		position: absolute;
		top: 0;
		left: 0;
		z-index: 0;
		width: unit(2);
		height: unit(2);
		margin: unit(0.5) unit(0.5) unit(0.5) 0;
		content: "";
		transition: 0.28s ease;
	}

	&:not(:checked) + label {
		&:before,
		&:after {
			border: $base-input-border-width solid $base-input-border-color;
		}

		&:after {
			opacity: 0;
			z-index: -1;
			transform: scale(2);
		}
	}

	&:hover + label:before {
		border-color: $base-input-border-hover-color;
	}

	// Checked
	&:checked + label {
		&:before {
			border: $base-input-border-width solid $base-input-border-hover-color;
		}

		&:after {
			background-color: $base-input-border-hover-color;
			z-index: 0;
			transform: scale(0.5), opacity(1);
		}
	}

	// Disabled style
	&:disabled {
		+ label {
			color: $base-input-disabled-color;
		}

		&:checked + label:before,
		&:not(:checked) + label:before {
			border: $base-input-border-width solid $base-input-disabled-color;
		}

		:checked + label:after {
			background-color: $base-input-disabled-color;
			border: none;
		}
	}
}

//
// Placeholder Colour
::-webkit-input-placeholder {
	color: $base-input-placeholder-color;
}

:-moz-placeholder {
	color: $base-input-placeholder-color;
}

::-moz-placeholder {
	color: $base-input-placeholder-color;
}

:-ms-input-placeholder {
	color: $base-input-placeholder-color;
}
